<head>
    <link href="https://fonts.googleapis.com/css2?family=Bellefair&family=Outfit:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }
        body {
          background-color: #f5f5f7;
          padding: 20px;
        }
        .container {
          max-width: 1200px;
          margin: 0 auto;
        }
        .header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 20px;
        }
        h1 {
          color: #333;
          font-size: 24px;
          font-weight: 600;
        }
        .back-button {
          background-color: #3b6da1;
          color: white;
          border: none;
          padding: 8px 16px;
          border-radius: 4px;
          cursor: pointer;
          font-size: 14px;
          text-decoration: none;
          display: inline-block;
        }
        .order-card {
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
          overflow: hidden;
          margin-bottom: 20px;
        }
        .order-header {
          background-color: #3b6da1;
          color: white;
          padding: 15px 20px;
          font-size: 16px;
          font-weight: 500;
        }
        .order-body {
          padding: 20px;
        }
        .order-info {
          display: flex;
          justify-content: space-between;
          margin-bottom: 15px;
          flex-wrap: wrap;
        }
        .info-group {
          margin-bottom: 15px;
          min-width: 200px;
        }
        .info-label {
          font-weight: 500;
          color: #666;
          margin-bottom: 5px;
        }
        .info-value {
          font-size: 16px;
          color: #333;
        }
        .order-table {
          width: 100%;
          border-collapse: collapse;
          margin-top: 20px;
        }
        .order-table th {
          background-color: #3b6da1;
          color: white;
          text-align: left;
          padding: 12px 15px;
        }
        .order-table td {
          padding: 12px 15px;
          border-bottom: 1px solid #eee;
        }
        .product-name {
          display: flex;
          align-items: center;
        }
        .product-image {
          width: 60px;
          height: 60px;
          border-radius: 4px;
          margin-right: 15px;
          object-fit: cover;
        }
        .status-badge {
          display: inline-block;
          padding: 5px 12px;
          border-radius: 15px;
          font-size: 14px;
          font-weight: 500;
        }
        .status-pending {
          background-color: #fff8e1;
          color: #ffa000;
        }
        .status-processing {
          background-color: #e3f2fd;
          color: #1976d2;
        }
        .status-shipped {
          background-color: #e0f7fa;
          color: #0097a7;
        }
        .status-delivered {
          background-color: #e8f5e9;
          color: #4caf50;
        }
        .status-cancelled {
          background-color: #ffebee;
          color: #e53935;
        }
        .action-button {
          background-color: #3b6da1;
          color: white;
          border: none;
          padding: 6px 12px;
          border-radius: 4px;
          cursor: pointer;
          font-size: 13px;
        }
        .address-card {
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
          overflow: hidden;
          margin-bottom: 20px;
        }
        .two-column {
          display: flex;
          gap: 20px;
          flex-wrap: wrap;
        }
        .column {
          flex: 1;
          min-width: 300px;
        }
        .payment-info {
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
          overflow: hidden;
          margin-bottom: 20px;
        }
        .order-summary {
          background-color: white;
          border-radius: 8px;
          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
          overflow: hidden;
        }
        .summary-item {
          display: flex;
          justify-content: space-between;
          padding: 12px 20px;
          border-bottom: 1px solid #eee;
        }
        .summary-item:last-child {
          border-bottom: none;
          font-weight: 600;
          background-color: #f8f9fa;
        }
        .update-status {
          margin-top: 20px;
          display: flex;
          gap: 10px;
        }
        .select-status {
          padding: 8px 12px;
          border: 1px solid #ddd;
          border-radius: 4px;
          flex: 1;
        }
        
        @media (max-width: 768px) {
          .order-info {
            flex-direction: column;
          }
          .two-column {
            flex-direction: column;
          }
          .column {
            width: 100%;
          }
        }
      
      
         /* Custom Dropdown Styling */
         .select-status {
                  appearance: none;
                  -webkit-appearance: none;
                  -moz-appearance: none;
                  width: 100%;
                  padding: 12px 16px;
                  font-size: 14px;
                  border: 1px solid #dce0e4;
                  border-radius: 6px;
                  background-color: #ffffff;
                  color: #495057;
                  cursor: pointer;
                  transition: all 0.3s ease;
                  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
                  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236c757d' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
                  background-repeat: no-repeat;
                  background-position: right 12px center;
                  background-size: 16px;
              }
      
              .select-status:focus {
                  outline: none;
                  border-color: #4a89dc;
                  box-shadow: 0 0 0 3px rgba(74, 137, 220, 0.15);
              }
      
              .select-status:hover {
                  border-color: #b8c2cc;
              }
      
              /* Dropdown option styling */
              .select-status option {
                  padding: 12px;
                  background-color: white;
              }
      
              /* Special styling for the placeholder option */
              .select-status option:first-child {
                  color: #6c757d;
                  font-style: italic;
              }
      
              /* Status-specific color indicators */
              .select-status option[value="Pending"] {
                  color: #f39c12;
              }
      
              .select-status option[value="Processing"] {
                  color: #3498db;
              }
      
              .select-status option[value="Shipped"] {
                  color: #27ae60;
              }
      
              .select-status option[value="Delivered"] {
                  color: #2ecc71;
              }
      
              .select-status option[value="Cancelled"] {
                  color: #e74c3c;
              }
      
              .select-status option[value="Return Request"] {
                  color: #9b59b6;
              }
      
              .select-status option[value="Returned"] {
                  color: #95a5a6;
              }
      
              /* Update button styling to match */
              .action-button {
                  background-color: #4a89dc;
                  color: white;
                  border: none;
                  border-radius: 6px;
                  padding: 12px 16px;
                  font-size: 14px;
                  cursor: pointer;
                  transition: background-color 0.3s ease;
                  font-weight: 500;
                  margin-left: 10px;
              }
      
              .action-button:hover {
                  background-color: #3a70b9;
              }
      
              .action-button:active {
                  background-color: #2b5595;
              }
      
              /* Container styling */
              .update-status {
                  display: flex;
                  align-items: center;
                  margin: 15px 0;
              }
      
              /* Make it responsive */
              @media (max-width: 768px) {
                  .update-status {
                      flex-direction: column;
                      align-items: stretch;
                  }
                  
                  .action-button {
                      margin-left: 0;
                      margin-top: 10px;
                  }
              }
      </style>
</head>      


<div class="container">
  <div class="header">
    <h1>Order Details</h1>
    <a href="/admin/orders" class="back-button">‚Üê Back to Orders</a>
  </div>
  
  <div class="order-card">
    <div class="order-header">
      #Order - <%= order.orderId %>
    </div>
    <div class="order-body">
      <div class="order-info">
        <div class="info-group">
          <div class="info-label">Order Date</div>
          <div class="info-value"><%= new Date(order.createdAt).toLocaleDateString() %></div>
        </div>
        <div class="info-group">
          <div class="info-label">Payment Method</div>
          <div class="info-value"><%= order.paymentMethod === 'COD' ? 'Cash On Delivery (COD)' : order.paymentMethod %></div>
        </div>
        <div class="info-group">
          <div class="info-label">Payment Status</div>
          <div class="info-value">
            <span class="status-badge status-<%= order.paymentStatus.toLowerCase() %>"><%= order.paymentStatus %></span>
          </div>
        </div>
        <div class="info-group">
          <div class="info-label">Grand Total</div>
          <div class="info-value">‚Çπ<%= order.finalAmount %></div>
        </div>
      </div>
      <input id="orderId" type="hidden" value="<%= order._id%>">
      <table class="order-table">
        <thead>
          <tr>
            <th>Product Name</th>
            <th>Status</th>
            <th>Unit Price</th>
            <th>Qty</th>
            <th>Subtotal</th>
         
          </tr>
        </thead>
        <tbody>
          <% order.orderItems.forEach(item => { %>
           
            <tr>
              <td>
                <div class="product-name">
                  <% if (item.productId && item.productId.images && item.productId.images.length > 0) { %>
                    <img src="<%= item.productId.images[0] %>" alt="Product" class="product-image">
                  <% } else { %>
                    <img src="/images/placeholder.jpg" alt="Product" class="product-image">
                  <% } %>
                  <div>
                    <strong><%= item.productId ? item.productId.name : 'Product Unavailable' %></strong>
                    <div>Product ID: <%= item.productId.productId %></div>
                  </div>
                </div>
              </td>
              <td>
                <span id="status-display-<%= item._id %>" class="status-badge status-<%= item.deliveryStatus.toLowerCase() %>">
                  <%= item.deliveryStatus %>
                </span>
              </td>
              <td>‚Çπ<%= item.price %></td>
              <td><%= item.quantity %></td>
              <td>‚Çπ<%= item.price * item.quantity %></td>
             
            </tr>
          
        </tbody>
      </table>
      
      <div class="update-status w-25">
        <select class="select-status" id="orderStatusSelect-<%= item._id %>" <%= item.deliveryStatus === "Delivered"  ? "disabled" : "" %>>
          <option value="">Change Order Status</option>
          <option value="Pending" <%= item.deliveryStatus === "Pending" ? "selected" : "" %>>Pending</option>
          <option value="Processing" <%= item.deliveryStatus === "Processing" ? "selected" : "" %>>Processing</option>
          <option value="Shipped" <%= item.deliveryStatus === "Shipped" ? "selected" : "" %>>Shipped</option>
          <option value="Out for delivery" <%= item.deliveryStatus === "Out for delivery" ? "selected" : "" %>>Out for delivery</option>
          <option value="Delivered" <%= item.deliveryStatus === "Delivered" ? "selected" : "" %>>Delivered</option>
        </select>
        
        <button class="action-button <%= item.deliveryStatus === 'Delivered' ? 'd-none' : '' %>" onclick="updateOrderStatus('<%= item._id %>')">Update Status</button>

      </div>


     <% if(item.returnStatus === "Pending"){ %>
      <div class="mt-4">
        <h4 class="text-lg font-semibold mb-2">Return Request</h4>
      <div class="mb-3">
        <label class="block mb-1 font-medium">Reason for Return:</label>
        <div class="p-3 border rounded bg-gray-50 w-25">
          <%= item.returnReason || 'No reason provided' %>
        </div>
      </div>
      
      <div class="update-status w-50">
        <button class="action-button" style="background-color: #4CAF50;" onclick="updateReturnStatus('<%= order._id %>','<%= item._id %>', 'Approved')">Approve</button>
        <button class="action-button" style="background-color: #f44336;" onclick="updateReturnStatus('<%= order._id %>','<%= item._id %>', 'Rejected')">Reject</button>
      </div>
      </div>
      <% } %>

      <% }) %>
      
  </div>
  
  <div class="two-column">
    <div class="column">
      <div class="address-card">
        <div class="order-header">
          Shipping Address
        </div>
        <div class="order-body">
          <div class="info-value"><%= order.shippingAddress.name %></div>
          <div class="info-value"><%= order.shippingAddress.phone %></div>
          <div class="info-value"><%= order.shippingAddress.addressLine1 %></div>
          <div class="info-value"><%= order.shippingAddress.addressLine2 %></div>
          <% if (order.shippingAddress.landmark) { %>
            <div class="info-value">Near <%= order.shippingAddress.landmark %></div>
          <% } %>
          <div class="info-value"><%= order.shippingAddress.state %>, <%= order.shippingAddress.zipCode %></div>
          <div class="info-value"><%= order.shippingAddress.country %></div>
        </div>
      </div>
    </div>
    
    <div class="column">      
      <div class="order-summary">
        <div class="order-header">
          Order Summary
        </div>
        <div class="summary-item">
          <div>Subtotal</div>
          <div>‚Çπ<%= order.totalAmount %></div>
        </div>
        <div class="summary-item">
          <div>Discount</div>
          <div>‚Çπ<%= order.discount %></div>
        </div>
        <div class="summary-item">
          <div>Shipping</div>
          <div>‚Çπ0</div>
        </div>
        <div class="summary-item">
          <div>Grand Total</div>
          <div>‚Çπ<%= order.finalAmount %></div>
        </div>
      </div>
    </div>
  </div>
</div>



<script>

async function updateOrderStatus(id) {
    try {
        const selectElement = document.getElementById('orderStatusSelect');
        const status = selectElement.value;
        const itemId = id;
        const orderId = document.getElementById("orderId").value;

        const response = await fetch(`/admin/orders/status/${itemId}`,{
            method : "PUT",
            headers : {"Content-Type" : "application/json"},
            body : JSON.stringify({
                status : status,
                orderId : orderId
            })
        })

        const data = await response.json()

        if(!response.ok){
            Swal.fire({
                icon : "error",
                text : data.error || "Failed to update the status",
                timer : 2000,
                showConfirmButton : false
            })
        }else {
            Swal.fire({
                icon : "success",
                text : data.message ,
                timer : 2000,
                showConfirmButton : false
            }).then(()=>{
                const statusDisplay = document.getElementById(`status-display-${itemId}`);
                statusDisplay.textContent = data.selectedStatus;
            })

        }

    } catch (error) {
        console.log(error)
    }
}

async function updateReturnStatus(orderId,itemId,status){
  try {
    if(!orderId || !itemId || !status ){
      Swal.fire({
        icon : "warning",
        text : "Credentials are missing",
        timer : 1500,
        showConfirmButton :false
      })
    }

    const response = await fetch('/admin/orderReturn',{
      method : "POST",
      headers : { "Content-Type" : "application/json" },
      body : JSON.stringify({
        orderId,
        itemId,
        status
      })
    })

    const data = await response.json()
    
    if(!response.ok){
      Swal.fire({
        icon : "error",
        text : data.error,
        timer : 1500,
        showConfirmButton : false
      })
    }



  } catch (error) {
    console.log(error)
    Swal.fire({
      icon : "error",
      text : error.message || "Something went wrong.",
      timer : 1500,
      showConfirmButton :false
    })
  }
}
  
</script>

