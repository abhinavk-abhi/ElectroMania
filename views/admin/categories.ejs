<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Bellefair&family=Outfit:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Outfit', sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
            display: flex;
            overflow-x: hidden;
        }

        /* Navbar */
        .navbar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .brand-name {
            font-family: 'Bellefair', serif;
            font-size: 28px;
            font-weight: normal;
            text-decoration: none;
            color: #192430;
        }

        .nav-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .nav-right .search-container {
            position: relative;
        }

        .nav-right input {
            padding: 8px 15px 8px 35px;
            border: 1px solid #e0e0e0;
            border-radius: 20px;
            width: 200px;
            font-size: 14px;
            background: #f5f5f5;
        }

        .nav-right .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            font-size: 16px;
        }

        .nav-right .new-btn {
            background: #3b6da1;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .nav-right .new-btn:hover {
            background: #2d5480;
        }

        .nav-right .filter-btn {
            color: #666;
            font-size: 18px;
            cursor: pointer;
        }

        .nav-right a.profile-icon {
            color: #666;
            font-size: 24px;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .nav-right a.profile-icon:hover {
            color: #28517D;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #f9f9f9;
            padding: 20px 0;
            position: fixed;
            top: 60px;
            bottom: 0;
            left: 0;
            z-index: 999;
            overflow-y: auto;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 15px 30px;
            color: #192430;
            text-decoration: none;
            font-size: 16px;
            transition: background 0.3s ease;
            position: relative;
            border-radius: 15px;
            cursor: pointer;
        }

        .sidebar a i {
            margin-right: 15px;
            font-size: 18px;
        }

        .sidebar a.active {
            background: #3b6da1;
            color: white;
        }

        .sidebar a:hover {
            background: #d9dbdd;
        }

        /* Main Content */
        .main-content {
            margin-left: 250px;
            padding: 80px 30px 30px;
            flex: 1;
        }

        .dashboard-title {
            font-size: 24px;
            color: #192430;
            margin-bottom: 20px;
        }

        /* Category Table */
        .category-table {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .category-table table {
            width: 100%;
        }

        .category-table th {
            background: #3b6da1;
            color: white;
            padding: 12px;
            font-size: 14px;
        }

        .category-table td {
            padding: 12px;
            font-size: 14px;
            color: #192430;
        }

        .category-table .status-toggle {
            display: flex;
            align-items: center;
        }

        .category-table .status-toggle input {
            appearance: none;
            width: 40px;
            height: 20px;
            background: #c5869c;
            border-radius: 20px;
            position: relative;
            cursor: pointer;
            outline: none;
        }

        .category-table .status-toggle input:checked {
            background: #62bd65;
        }

        .category-table .status-toggle input::before {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            background: white;
            border-radius: 50%;
            top: 2px;
            left: 2px;
            transition: transform 0.3s ease;
        }

        .category-table .status-toggle input:checked::before {
            transform: translateX(20px);
        }

        .category-table .actions a {
            color: #666;
            margin: 0 5px;
            font-size: 16px;
            text-decoration: none;
        }

        .category-table .actions a:hover {
            color: #28517D;
        }

        /* Pagination */
        .pagination-custom {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
            color: #666;
            font-size: 14px;
        }

        .pagination-custom .page-nav {
            display: flex;
            gap: 10px;
        }

        .pagination-custom .page-nav a {
            color: #666;
            text-decoration: none;
            padding: 5px 10px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
        }

        .pagination-custom .page-nav a.active {
            background: #e0e0e0;
        }

        .pagination-custom .page-nav a:hover {
            background: #f5f5f5;
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            .sidebar {
                width: 200px;
            }

            .main-content {
                margin-left: 200px;
            }

            .nav-right input {
                width: 150px;
            }

            .category-table th,
            .category-table td {
                font-size: 13px;
                padding: 10px;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                position: static;
                top: auto;
                padding: 10px 0;
            }

            .main-content {
                margin-left: 0;
                padding: 20px;
            }

            .navbar {
                padding: 10px 20px;
            }

            .brand-name {
                font-size: 24px;
            }

            .nav-right {
                gap: 15px;
            }

            .nav-right input {
                width: 120px;
                padding: 6px 12px 6px 30px;
            }

            .nav-right .new-btn {
                padding: 6px 12px;
                font-size: 12px;
            }

            .category-table th,
            .category-table td {
                font-size: 12px;
                padding: 8px;
            }

            .category-table .actions a {
                font-size: 14px;
            }
        }

        @media (max-width: 480px) {
            .navbar {
                flex-direction: column;
                align-items: flex-start;
                padding: 10px 15px;
                height: auto;
            }

            .brand-name {
                margin-bottom: 10px;
            }

            .nav-right {
                width: 100%;
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }

            .nav-right input {
                width: 100%;
                margin-bottom: 10px;
            }

            .nav-right .new-btn {
                width: 100%;
            }

            .category-table {
                overflow-x: auto;
            }

            .category-table th,
            .category-table td {
                font-size: 11px;
                padding: 6px;
            }

            .category-table .actions a {
                font-size: 12px;
            }

            .pagination-custom {
                flex-direction: column;
                gap: 10px;
            }

            .pagination-custom .page-nav {
                justify-content: center;
            }
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <a href="/" class="brand-name">ElectroMania</a>
        <div class="nav-right">
            <div class="search-container">
                <input type="search" placeholder="Search here...">
                <i class="bi bi-search search-icon"></i>
            </div>
            <button class="new-btn">New</button>
            <a href="#" class="filter-btn"><i class="bi bi-funnel"></i></a>
            <a href="#" class="profile-icon"><i class="bi bi-person-circle"></i></a>
        </div>
    </nav>

    <!-- Sidebar -->
    <div class="sidebar">
        <a href="/admin/dashboard"><i class="bi bi-grid"></i> Dashboard</a>
        <a href="/admin/categories"><i class="bi bi-tag"></i> Categories</a>
        <a href="/admin/products"><i class="bi bi-box"></i> Products</a>
        <a href="/admin/customers" ><i class="bi bi-people"></i> Customers</a>
        <a href="/admin/orders"><i class="bi bi-cart"></i> Orders</a>
        <a href="/admin/coupons"><i class="bi bi-ticket"></i> Coupons</a>
        <a href="/admin/refund-return"><i class="bi bi-arrow-left-right"></i> Refund/Return</a>
        <a href="/admin/sales-report"><i class="bi bi-bar-chart"></i> Sales Report</a>
        <a href="/admin/logout"><i class="bi bi-box-arrow-right"></i> Sign Out</a>
    </div>

 
    <main class="col-md-9 ms-sm-auto col-lg-9 px-md-4 py-3 mx-auto">
        <h1 class="h3 mb-3 fw-bold">Categories</h1>

        <!-- Filters and Add Product Button -->
        <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
            <div class="d-flex gap-2">
                <div class="flex-grow-1" style="max-width: 180px;">
                    <select class="form-select filter-select">
                        <option disabled hidden>Filter ⇅</option>
                        <option value="1" <%= selectedFilter === undefined ? 'selected' : '' %>>All</option>
                        <option value="true" <%= selectedFilter === 'true' ? 'selected' : '' %>>Active</option>
                        <option value="false" <%= selectedFilter === 'false' ? 'selected' : '' %>>Blocked</option>
                    </select>
                </div>
            </div>

            <div class="d-flex gap-4 align-items-center">
                <button type="button" class="btn admin-btns text-white" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                    <i class="fa-solid fa-plus"></i> New
                </button>
                <form class="d-flex search-container flex-grow-1" style="max-width: 300px;" id="searchForm">
                    <input id="searchInput" class="form-control me-2" type="search" placeholder="Search category name...." aria-label="Search" value="<%= searchQuery || '' %>">
                    <button class="btn" type="submit" style="background-color: #3e29a8;">
                        <i class="fas fa-search text-white"></i>
                    </button>
                </form>
            </div>
        </div>

        <!-- Add Category Modal -->
        <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                <div class="modal-content shadow-lg border-0 rounded-3">
                    <div class="modal-header text-white" style="background-color: #3e29a8; height: 50px;">
                        <h5 class="modal-title fw-bold" id="addCategoryModalLabel">Add Category</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <form action="/admin/categories" id="addCategoryForm" enctype="multipart/form-data">
                            <div class="mb-4">
                                <label for="addName" class="form-label fw-semibold">Category Name</label>
                                <input type="text" class="form-control rounded-3" id="addName" name="addName" placeholder="Enter Category Name">
                                <div id="addNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                            </div>
                            <div class="d-flex w-100 gap-3">
                                <div class="mb-4 w-25">
                                    <label for="addThumbnail" class="form-label fw-semibold">Thumbnail</label>
                                    <div class="image-upload-slot" id="addThumbnailUploadSlot">
                                        <div class="image-upload-dropzone" onclick="document.getElementById('addThumbnail').click();">
                                            <i class="fa-solid fa-upload"></i>
                                            <p class="mb-0">Add Image</p>
                                            <input type="file" class="d-none" id="addThumbnail" name="addThumbnail" accept="image/*" onchange="previewThumbnail(event)">
                                        </div>
                                        <div class="image-preview">
                                            <img id="addThumbnailPreview" src="#" alt="Preview">
                                            <button type="button" class="remove-image-btn" onclick="removeAddThumbnail()">×</button>
                                        </div>
                                    </div>
                                    <div id="addThumbError" class="position-absolute d-flex" style="font-size: 0.8em; color: #ff0101;">
                                        <div></div>
                                        <span style="margin-left: 50px;"></span>
                                    </div>
                                </div>
                                <div class="mb-4 w-100">
                                    <label for="addDescription" class="form-label fw-semibold">Category Description</label>
                                    <textarea class="form-control rounded-3" id="addDescription" name="addDescription" rows="3" placeholder="Enter Category Description"></textarea>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-end">
                                <div class="w-50 me-2">
                                    <label for="addStatus" class="form-label fw-semibold">Visibility Status</label>
                                    <select class="form-select rounded-3" id="addStatus" name="addStatus">
                                        <option value="Active">Active</option>
                                        <option value="Inactive">Inactive</option>
                                    </select>
                                </div>
                                <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #3e29a8;">
                                    <i class="fa fa-plus-circle me-2"></i> Add Category
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Category Modal -->
        <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                <div class="modal-content shadow-lg border-0 rounded-3">
                    <div class="modal-header text-white" style="background-color: #3e29a8; height: 50px;">
                        <input type="hidden" id="originalCategoryName" name="originalCategoryName">
                        <h5 class="modal-title fw-bold" id="editCategoryModalLabel">Update Category</h5>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body p-4">
                        <form id="editCategoryForm" enctype="multipart/form-data" class="needs-validation" novalidate>
                            <div class="mb-4">
                                <label for="editName" class="form-label fw-semibold">Category Name</label>
                                <input type="text" class="form-control rounded-3" id="editName" name="editName" placeholder="Enter Category Name">
                                <div id="editNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                            </div>
                            <div class="d-flex w-100 gap-5">
                                <div class="mb-4">
                                    <label for="editThumbnail" class="form-label fw-semibold">Thumbnail</label>
                                    <div class="image-upload-slot" id="thumbnailUploadSlot">
                                        <div class="image-upload-dropzone" onclick="document.getElementById('editThumbnail').click();">
                                            <i class="fa-solid fa-upload"></i>
                                            <p class="mb-0">Add Image</p>
                                            <input type="file" class="d-none" id="editThumbnail" name="editThumbnail" accept="image/*" onchange="previewThumbnail(event)">
                                        </div>
                                        <div class="image-preview">
                                            <img id="thumbnailPreview" src="#" alt="Preview">
                                            <button type="button" class="remove-image-btn" onclick="removeThumbnail()">×</button>
                                            <input type="hidden" id="thumbnailState" name="thumbnailState" value="true">
                                        </div>
                                    </div>
                                    <div id="editThumbError" class="position-absolute d-flex" style="font-size: 0.8em; color: #ff0101;">
                                        <div></div>
                                        <span style="margin-left: 50px;"></span>
                                    </div>
                                </div>
                                <div class="mb-4 w-100">
                                    <label for="editDescription" class="form-label fw-semibold">Category Description</label>
                                    <textarea class="form-control rounded-3" id="editDescription" name="editDescription" rows="3" placeholder="Enter Category Description"></textarea>
                                </div>
                            </div>
                            <div class="d-flex justify-content-between align-items-end">
                                <div class="w-50 me-2">
                                    <label for="editStatus" class="form-label fw-semibold">Visibility Status</label>
                                    <select class="form-select rounded-3" id="editStatus" name="editStatus">
                                        <option value="Active">Active</option>
                                        <option value="Inactive">Inactive</option>
                                    </select>
                                </div>
                                <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #3e29a8;">
                                    <i class="fa fa-check-circle me-2"></i> Update Category
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <!-- Products Table and Pagination code remains unchanged -->
        <div class="card">
            <div class="card-body p-0 m-0">
                <div class="table-responsive">
                    <table class="table table-hover text-center">
                        <thead>
                            <tr>
                                <th class="text-start ps-5">Category Info</th>
                                <th>Description</th>
                                <th>Item Count</th>
                                <th>Created Date</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% cat.reverse().forEach((category, index) => { %>
                            <tr>
                                <td class="text-start ps-4"><img src="<%= category.thumbnail || 'default.png' %>" style="border-radius: 50%;" alt="thumb" width="30" height="30"> <%= category.name%></td>
                                <td class="category-description"><%= category.description %></td>
                                <td><%= category.itemsCount %></td>
                                <td><%= new Date(category.createdAt).toLocaleString("en-IN", { 
                                    day: "2-digit", 
                                    month: "short", 
                                    year: "numeric", 
                                    timeZone: "Asia/Kolkata"
                                }) %></td>
                                <td>
                                    <div class="d-flex justify-content-center align-items-center">
                                        <p style="color: #3e29a8; margin: 0;" class="<%= category.visibility ? '' : 'd-none' %>">
                                            <i class="fa-solid fa-eye"></i>
                                        </p>   
                                        <p style="color: #9c9999; margin: 0;" class="<%= category.visibility ? 'd-none' : '' %>">
                                            <i class="fa-solid fa-eye-slash"></i>
                                        </p>
                                    </div>
                                </td>
                                <td>
                                    <button 
                                        class="btn btn-sm me-2" 
                                        style="color: #4a00e0;"
                                        data-bs-toggle="modal" 
                                        data-bs-target="#editCategoryModal"
                                        onclick="openEditModal(
                                            '<%= category.name %>', 
                                            '<%= category.description %>', 
                                            '<%= category.visibility %>',
                                            '<%= category.thumbnail %>'
                                        )">
                                        <i class="fa-solid fa-pen-to-square"></i>
                                    </button>
                                </td>
                            </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <nav>
                <ul class="pagination pagination-sm">
                    <% if (currentPage > 1) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>
                    <% } %>
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                    <% if (currentPage < totalPages) { %>
                        <li class="page-item">
                            <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    </main>
</div>
</div>

<script>
function openEditModal(name, description, visibility, thumbnail) {
    document.getElementById("originalCategoryName").value = name;
    document.getElementById("editName").value = name;
    document.getElementById("editDescription").value = description;
    document.getElementById("editStatus").value = visibility.toString() === "true" ? "Active" : "Inactive";

    const preview = document.getElementById("thumbnailPreview");
    const uploadSlot = document.getElementById("thumbnailUploadSlot");
    const thumbnailState = document.getElementById("thumbnailState");

    if (thumbnail) {
        preview.src = thumbnail;
        uploadSlot.classList.add('filled');
        thumbnailState.value = "true";
    } else {
        preview.src = '#';
        uploadSlot.classList.remove('filled');
        thumbnailState.value = "false";
    }

    document.getElementById("editDescription").dispatchEvent(new Event("input"));
}

function previewThumbnail(event) {
    const file = event.target.files[0];
    const inputId = event.target.id;
    const isAddModal = inputId === 'addThumbnail';
    
    const previewImage = document.getElementById(
        isAddModal ? 'addThumbnailPreview' : 'thumbnailPreview'
    );
    const uploadSlot = document.getElementById(
        isAddModal ? 'addThumbnailUploadSlot' : 'thumbnailUploadSlot'
    );
    const thumbnailState = document.getElementById('thumbnailState');

    if (!file) return;

    const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
    if (!validImageTypes.includes(file.type)) {
        alert('Please upload a valid image file (JPEG, PNG, or GIF)');
        return;
    }

    const reader = new FileReader();
    reader.onload = function(e) {
        previewImage.src = e.target.result;
        uploadSlot.classList.add('filled');
        thumbnailState.value = "true"; 
    };
    reader.onerror = function() {
        console.error('Error reading file');
        alert('Error loading image preview');
    };
    reader.readAsDataURL(file);
}

function removeThumbnail() {
    const editThumbnail = document.getElementById('editThumbnail');
    const preview = document.getElementById('thumbnailPreview');
    const uploadSlot = document.getElementById('thumbnailUploadSlot');
    const thumbnailState = document.getElementById('thumbnailState');

    editThumbnail.value = '';
    preview.src = '#';
    uploadSlot.classList.remove('filled');
    thumbnailState.value = "false";
}

function removeAddThumbnail() {
    const addThumbnail = document.getElementById('addThumbnail');
    const preview = document.getElementById('addThumbnailPreview');
    const uploadSlot = document.getElementById('addThumbnailUploadSlot');
    addThumbnail.value = '';
    preview.src = '#';
    uploadSlot.classList.remove('filled');
}

document.addEventListener("DOMContentLoaded", function () {
    document.getElementById("editCategoryForm").addEventListener("submit", async function (e) {
        e.preventDefault();
        const orgName = document.getElementById("originalCategoryName").value.trim();
        const editName = document.getElementById("editName").value.trim();
        const editDescription = document.getElementById("editDescription").value.trim();
        const editThumbnail = document.getElementById("editThumbnail").files[0];
        const thumbnailState = document.getElementById("thumbnailState").value;

        let errors = {
            editName: document.getElementById("editNameError"),
            editThumbnail: document.querySelector("#editThumbError div"),
            editDescription: document.querySelector("#editThumbError span")
        };

        Object.values(errors).forEach((el) => (el.innerText = ""));
        let hasError = false;

        if (!editName) {
            errors.editName.innerText = "Name is required.";
            hasError = true;
        }
        if (!editDescription) {
            errors.editDescription.innerText = "Description is required.";
            hasError = true;
        }
        if (thumbnailState === "false") {
            errors.editThumbnail.innerText = "Thumbnail is required.";
            hasError = true;
        }

        if (hasError) return;

        const formData = new FormData(event.target);
        formData.append('orgName', orgName);

        try {
            const response = await fetch("/admin/categories", {
                method: "PUT",
                body: formData
            });

            if (response.ok) {
                Swal.fire({
                    icon: "success",
                    text: "Category updated successfully!",
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: "error",
                    text: "Category updation failed!",
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                text: "An unexpected error occurred.",
                showConfirmButton: false,
                timer: 2000
            });
        }
    });

    document.getElementById("addCategoryForm")?.addEventListener("submit", async (event) => {
        event.preventDefault();
        const addName = document.getElementById("addName").value.trim();
        const addDescription = document.getElementById("addDescription").value.trim();
        const addThumbnail = document.getElementById("addThumbnail").files[0];

        let errors = {
            addName: document.getElementById("addNameError"),
            addThumbnail: document.querySelector("#addThumbError div"),
            addDescription: document.querySelector("#addThumbError span")
        };

        Object.values(errors).forEach((el) => (el.innerText = ""));
        let hasError = false;

        if (!addName) {
            errors.addName.innerText = "Name is required.";
            hasError = true;
        }
        if (!addThumbnail) {
            errors.addThumbnail.innerText = "Thumbnail is required.";
            hasError = true;
        }
        if (!addDescription) {
            errors.addDescription.innerText = "Description is required.";
            hasError = true;
        }

        if (hasError) return;

        const formData = new FormData(document.getElementById("addCategoryForm"));

        try {
            const response = await fetch("/admin/categories", {
                method: "POST",
                body: formData,
            });

            const result = await response.json();

            if (response.ok) {
                Swal.fire({
                    position: "top-center",
                    icon: "success",
                    text: "Category added successfully!",
                    showConfirmButton: false,
                    timer: 2000,
                }).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire({
                    icon: "error",
                    text: result.error || "An unexpected error occurred.",
                    showConfirmButton: false,
                    timer: 2000,
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire({
                icon: "error",
                title: "Oops!",
                text: "Something went wrong. Please try again.",
            });
        }
    });

    document.getElementById('searchForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        const searchQuery = document.getElementById('searchInput').value.trim();
        try {
            if (searchQuery) {
                window.location.href = `/admin/categories?q=${encodeURIComponent(searchQuery)}`;
            } else if (searchQuery == "") {
                window.location.href = '/admin/categories'; 
            }
        } catch (error) {
            console.error('Error fetching search results:', error);
        }
    });

    document.querySelector('.filter-select').addEventListener('change', function () {
        const filterValue = this.value;
        let query = '';
        if (filterValue === 'true') {
            query = '?visibility=true';
        } else if (filterValue === 'false') {
            query = '?visibility=false';
        }
        window.location.href = `/admin/categories/filter${query}`;
    });

    document.querySelectorAll(".category-description").forEach((desc) => {
        const maxLength = 30;
        if (desc.textContent.length > maxLength) {
            desc.textContent = desc.textContent.substring(0, maxLength) + "...";
        }
    });
});
</script>
</body>