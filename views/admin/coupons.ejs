<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ElectroMania - Categories</title>
    <link href="https://fonts.googleapis.com/css2?family=Bellefair&family=Outfit:wght@400;500;700&display=swap" rel="stylesheet">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <!-- Font Awesome (for modals) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
     <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
    --primary-color: #3b6da1;
    --success : #0eb96a;
    --danger : #b90e0e
}
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Outfit', sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
            display: flex;
            overflow-x: hidden;
        }

        /* Navbar */
        .navbar {
            background: white;
            padding: 15px 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
        }

        .brand-name {
            font-family: 'Bellefair', serif;
            font-size: 28px;
            font-weight: normal;
            text-decoration: none;
            color: #192430;
        }

        .new-btn-2{
                background-color: #3e29a8;
                border-radius: 10px;
                width: fit-content;
                color: #e0e0e0;
            }

        .nav-right {
            display: flex;
            align-items: center;
            gap: 20px;
        }

        .nav-right .search-container {
            position: relative;
        }

        .nav-right input {
            padding: 8px 15px 8px 35px;
            border: 1px solid #e0e0e0;
            border-radius: 20px;
            width: 200px;
            font-size: 14px;
            background: #f5f5f5;
        }

        .nav-right .search-icon {
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            color: #666;
            font-size: 16px;
        }

        .nav-right .new-btn {
            background: #3b6da1;
            color: white;
            padding: 8px 15px;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .nav-right .new-btn:hover {
            background: #2d5480;
        }

        .nav-right .filter-btn {
            color: #666;
            font-size: 18px;
            cursor: pointer;
        }

        .nav-right a.profile-icon {
            color: #666;
            font-size: 24px;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .nav-right a.profile-icon:hover {
            color: #28517D;
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background: #f9f9f9;
            padding: 20px 0;
            position: fixed;
            top: 60px;
            bottom: 0;
            left: 0;
            z-index: 999;
            overflow-y: auto;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 15px 30px;
            color: #192430;
            text-decoration: none;
            font-size: 16px;
            transition: background 0.3s ease;
            position: relative;
            border-radius: 15px;
            cursor: pointer;
        }

        .sidebar a i {
            margin-right: 15px;
            font-size: 18px;
        }

        .sidebar a.active {
            background: #3b6da1;
            color: white;
        }

        .sidebar a:hover {
            background: #d9dbdd;
        }

        /* Main Content */
        .main-content {
            margin-left: 250px;
            padding: 80px 30px 30px;
            flex: 1;
        }

        .dashboard-title {
            font-size: 24px;
            color: #192430;
            margin-bottom: 20px;
        }

        /* Filters and Search */
        .filter-search-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            gap: 20px;
        }

        .filter-select {
            padding: 8px 15px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
            font-size: 14px;
            max-width: 180px;
        }

        .search-container {
            display: flex;
            align-items: center;
            max-width: 300px;
            width: 100%;
        }

        .search-container input {
            padding: 8px 15px;
            border: 1px solid #e0e0e0;
            border-radius: 4px 0 0 4px;
            font-size: 14px;
            flex: 1;
        }

        .search-container button {
            background: #3b6da1;
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 0 4px 4px 0;
            font-size: 14px;
            cursor: pointer;
            transition: background 0.3s ease;
        }

        .search-container button:hover {
            background: #2d5480;
        }

        /* Category Table */
        .category-table {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }

        .category-table table {
            width: 100%;
        }

        .category-table th {
            background: #3b6da1;
            color: white;
            padding: 12px;
            font-size: 14px;
        }

        .category-table td {
            padding: 12px;
            font-size: 14px;
            color: #192430;
            vertical-align: middle;
        }

        .category-table .category-description {
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .category-table .actions button {
            color: #4a00e0;
            font-size: 16px;
            background: none;
            border: none;
            cursor: pointer;
        }

        .category-table .actions button:hover {
            color: #28517D;
        }

        /* Pagination */
        .pagination-custom {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            color: #666;
            font-size: 14px;
        }

        .pagination-custom .page-nav {
            display: flex;
            gap: 10px;
        }

        .pagination-custom .page-nav a {
            color: #666;
            text-decoration: none;
            padding: 5px 10px;
            border: 1px solid #e0e0e0;
            border-radius: 4px;
        }

        .pagination-custom .page-nav a.active {
            background: #e0e0e0;
        }

        .pagination-custom .page-nav a:hover {
            background: #f5f5f5;
        }

        /* Modal Image Upload (for Edit Modal only) */
        .image-upload-slot {
            position: relative;
            width: 100px;
            height: 100px;
        }

        .image-upload-dropzone {
            width: 100%;
            height: 100%;
            border: 2px dashed #e0e0e0;
            border-radius: 8px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .image-upload-dropzone i {
            font-size: 24px;
            color: #666;
        }

        .image-upload-dropzone p {
            font-size: 12px;
            color: #666;
            margin: 0;
        }

        .image-preview {
            display: none;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 8px;
        }

        .image-preview .remove-image-btn {
            position: absolute;
            top: -10px;
            right: -10px;
            background: #ff0101;
            color: white;
            border: none;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
        }

        .image-upload-slot.filled .image-upload-dropzone {
            display: none;
        }

        .image-upload-slot.filled .image-preview {
            display: block;
        }

        .stock-color {
            background-color: var(--success);
            border-radius: 28px;
            padding: 9px 8px;
            width: 100px;
            }

        .no-stock-color {
            background-color: var(--danger);
            border-radius: 28px;
            padding: 9px 8px;
            width: 100px;
        }


        /* Responsive Design */
        @media (max-width: 1024px) {
            .sidebar {
                width: 200px;
            }

            .main-content {
                margin-left: 200px;
            }

            .nav-right input {
                width: 150px;
            }

            .category-table th,
            .category-table td {
                font-size: 13px;
                padding: 10px;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                width: 100%;
                position: static;
                top: auto;
                padding: 10px 0;
            }

            .main-content {
                margin-left: 0;
                padding: 20px;
            }

            .navbar {
                padding: 10px 20px;
            }

            .brand-name {
                font-size: 24px;
            }

            .nav-right {
                gap: 15px;
            }

            .nav-right input {
                width: 120px;
                padding: 6px 12px 6px 30px;
            }

            .nav-right .new-btn {
                padding: 6px 12px;
                font-size: 12px;
            }

            .category-table th,
            .category-table td {
                font-size: 12px;
                padding: 8px;
            }

            .category-table .actions button {
                font-size: 14px;
            }

            .filter-search-container {
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }

            .filter-select,
            .search-container {
                max-width: 100%;
            }
        }

        @media (max-width: 480px) {
            .navbar {
                flex-direction: column;
                align-items: flex-start;
                padding: 10px 15px;
                height: auto;
            }

            .brand-name {
                margin-bottom: 10px;
            }

            .nav-right {
                width: 100%;
                flex-direction: column;
                align-items: flex-start;
                gap: 10px;
            }

            .nav-right input {
                width: 100%;
                margin-bottom: 10px;
            }

            .nav-right .new-btn {
                width: 100%;
            }

            .category-table {
                overflow-x: auto;
            }

            .category-table th,
            .category-table td {
                font-size: 11px;
                padding: 6px;
            }

            .category-table .actions button {
                font-size: 12px;
            }

          
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <a href="/admin" class="brand-name">ElectroMania</a>
    </nav>

    <!-- Sidebar -->
    <div class="sidebar">
        <a href="/admin/dashboard"><i class="bi bi-grid"></i> Dashboard</a>
        <a href="/admin/categories"><i class="bi bi-tag"></i> Categories</a>
        <a href="/admin/products"><i class="bi bi-box"></i> Products</a>
        <a href="/admin/customers"><i class="bi bi-people"></i> Customers</a>
        <a href="/admin/orders"><i class="bi bi-cart"></i> Orders</a>
        <a href="/admin/coupons" class="active"><i class="bi bi-ticket"></i> Coupons</a>
        <a href="/admin/sales-report"><i class="bi bi-bar-chart"></i> Sales Report</a>
        <a href="/admin//wallet-management"><i class="bi bi-credit-card"></i>Wallet</a>
        <a href="/admin/logout"><i class="bi bi-box-arrow-right"></i> Sign Out</a>
    </div>

    <!-- Main Content -->
    <div class="main-content">
         <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mt-2 mt-sm-3 mt-md-4">
                    <h1 class="h3 mb-3 fw-bold">Coupons</h1>
                    <button type="button" class="btn btn-sm d-flex align-items-center gap-1 text-white" style="background-color: var(--primary-color);" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                        <i class="fa-solid fa-plus"></i> 
                        <span class="d-none d-sm-inline">New</span>
                    </button>
                </div>

        <!-- Filters and Search -->
                        <!-- Filters and Add Coupon Button -->
                <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
                    <div class="d-flex gap-2">
                        <div class="flex-grow-1" style="max-width: 180px;">
                            <select class="form-select filter-select">
                                <option disabled hidden>Filter ⇅</option>
                                <option value="1" <%= selectedFilter === undefined ? 'selected' : '' %>>All</option>
                                <option value="true" <%= selectedFilter === 'true' ? 'selected' : '' %>>Active</option>
                                <option value="false" <%= selectedFilter === 'false' ? 'selected' : '' %>>Expired</option>
                            </select>
                        </div>
                    </div>

                    <div class="d-flex gap-4 align-items-center">
                        <form class="d-flex search-container flex-grow-1" style="max-width: 300px;" id="searchForm">
                            <div class="input-group">
                                <input id="searchInput" class="form-control" type="search" placeholder="Search coupon name..." aria-label="Search" value="<%= searchQuery || '' %>">
                                <button class="btn" type="submit" style="background-color: var(--primary-color);">
                                    <i class="fas fa-search text-white"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

        <!-- Add Coupon Modal -->
                <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: var(--primary-color); height: 50px;">
                                <h5 class="modal-title fw-bold" id="addCouponModalLabel">Add new Coupon</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form id="addCouponForm">
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addName" class="form-label fw-semibold">Coupon Name</label>
                                            <input type="text" class="form-control rounded-3" id="addName" name="addName" placeholder="Enter Coupon Name">
                                            <div id="addNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addCode" class="form-label fw-semibold">Coupon Code</label>
                                            <input type="text" class="form-control rounded-3" id="addCode" name="addCode" placeholder="Enter Coupon Code">
                                            <div id="addCodeError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>

                                    <div class="mb-4 w-100">
                                        <label for="addDescription" class="form-label fw-semibold">Coupon Description</label>
                                        <input type="text" class="form-control rounded-3" id="addDescription" name="addDescription" placeholder="Enter Coupon Description">
                                        <div id="addDescriptionError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addStartDate" class="form-label fw-semibold">Start Date</label>
                                            <input type="date" class="form-control rounded-3" id="addStartDate" name="addStartDate">
                                            <div id="addStartDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addExpiryDate" class="form-label fw-semibold">Expiry Date</label>
                                            <input type="date" class="form-control rounded-3" id="addExpiryDate" name="addExpiryDate">
                                            <div id="addExpiryDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addMinPrice" class="form-label fw-semibold">Minimum Price</label>
                                            <input type="number" class="form-control rounded-3" id="addMinPrice" name="addMinPrice" placeholder="Enter Minimum Price">
                                            <div id="addMinPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addOfferPrice" class="form-label fw-semibold">Offer Price</label>
                                            <input type="number" class="form-control rounded-3" id="addOfferPrice" name="addOfferPrice" placeholder="Enter Offer Price">
                                            <div id="addOfferPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end w-100 gap-3">
                                        <div class="w-25 me-2">
                                            <label for="addUsageType" class="form-label fw-semibold">Status</label>
                                            <select class="form-select rounded-3" id="addUsageType" name="addUsageType">
                                                <option value="single-use">One time</option>
                                                <option value="multi-use">Reusable</option>
                                            </select>
                                        </div>

                                        <button type="submit" class="btn w-50 px-4 py-2 text-white shadow-sm align-self-end" style="background-color: var(--primary-color);">
                                            <i class="fa fa-plus-circle me-2"></i> Add Coupon
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

       <!-- Edit Coupon Modal -->
                <div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: var(--primary-color); height: 50px;">
                                <input type="hidden" id="originalCouponName" name="originalCouponName">
                                <h5 class="modal-title fw-bold" id="editCouponModalLabel">Update Coupon</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form id="editCouponForm" class="needs-validation" novalidate>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editName" class="form-label fw-semibold">Coupon Name</label>
                                            <input type="text" class="form-control rounded-3" id="editName" name="editName" placeholder="Enter Coupon Name">
                                            <div id="editNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editCode" class="form-label fw-semibold">Coupon Code</label>
                                            <input type="text" class="form-control rounded-3" id="editCode" name="editCode" placeholder="Enter Coupon Code">
                                            <div id="editCodeError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="mb-4 w-100">
                                        <label for="editDescription" class="form-label fw-semibold">Coupon Description</label>
                                        <input type="text" class="form-control rounded-3" id="editDescription" name="editDescription" placeholder="Enter Coupon Description">
                                        <div id="editDescriptionError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editStartDate" class="form-label fw-semibold">Start Date</label>
                                            <input type="date" class="form-control rounded-3" id="editStartDate" name="editStartDate">
                                            <div id="editStartDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editExpiryDate" class="form-label fw-semibold">Expiry Date</label>
                                            <input type="date" class="form-control rounded-3" id="editExpiryDate" name="editExpiryDate">
                                            <div id="editExpiryDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editMinPrice" class="form-label fw-semibold">Minimum Price</label>
                                            <input type="number" class="form-control rounded-3" id="editMinPrice" name="editMinPrice" placeholder="Enter Minimum Price">
                                            <div id="editMinPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editOfferPrice" class="form-label fw-semibold">Offer Price</label>
                                            <input type="number" class="form-control rounded-3" id="editOfferPrice" name="editOfferPrice" placeholder="Enter Offer Price">
                                            <div id="editOfferPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end w-100">
                                        <div class="w-100 me-2">
                                            <label for="editStatus" class="form-label fw-semibold">Status</label>
                                            <select class="form-select rounded-3" id="editStatus" name="editStatus">
                                                <option value="Active">Active</option>
                                                <option value="Inactive">Expired</option>
                                            </select>
                                        </div>
                                        <div class="w-100 me-2">
                                            <label for="editUsageType" class="form-label fw-semibold">Status</label>
                                            <select class="form-select rounded-3" id="editUsageType" name="editUsageType">
                                                <option value="single-use">One time</option>
                                                <option value="multi-use">Reusable</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="w-100 btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: var(--primary-color);">
                                            <i class="fa fa-check-circle me-2"></i> Update Coupon
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

        <!-- Category Table -->
        <div class="category-table">
            <table class="table table-hover">
               <thead>
                                        <tr>
                                            <th>SL No</th>
                                            <th class="text-start ps-5">Coupon Name</th>
                                            <th>Coupon Code</th>
                                            <th>Start Date</th>
                                            <th>Expiry Date</th>
                                            <th>Min Price</th>
                                            <th>Offer Price</th>
                                            <th>Used</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% coupons.reverse().forEach((coupon, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td class="text-start ps-4"><%= coupon.name %></td>
                                            <td><%= coupon.code %></td>
                                            <td><%= new Date(coupon.startDate).toLocaleDateString("en-GB") %></td>
                                            <td><%= new Date(coupon.expiryDate).toLocaleDateString("en-GB") %></td>
                                            <td><%= coupon.minPrice %></td>
                                            <td><%= coupon.offerPrice %></td>
                                            <td><%= coupon.used %></td>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <p style=" margin: 0;" class="badge stock-color <%= coupon.status === 'Active' ? '' : 'd-none' %>">
                                                        Active
                                                    </p>   
                                                    <p style="margin: 0;" class="badge no-stock-color <%= coupon.status === 'Active' ? 'd-none' : '' %>">
                                                        Expired
                                                    </p>
                                                </div>
                                            </td>
                                            <td>
                                                <button 
                                                    class="btn btn-sm me-2" 
                                                    style="color: var(--secondary);"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#editCouponModal"
                                                    onclick="openEditModal(
                                                        '<%= coupon.name %>',
                                                        '<%= coupon.code %>', 
                                                        '<%= coupon.description %>', 
                                                        '<%= coupon.startDate.toISOString %>', 
                                                        '<%= coupon.expiryDate.toISOString %>',
                                                        '<%= coupon.minPrice %>',
                                                        '<%= coupon.offerPrice %>',
                                                        '<%= coupon.status %>',
                                                        '<%= coupon.usageType %>'
                                                    )">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </button>
                                                <button class="deleteButton btn btn-sm me-2" data-coupon-name="<%= coupon.name %>">
                                                    <i class="fa-solid fa-trash" style="color: var(--secondary);"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
            </table>
        </div>

        <!-- Pagination -->
        <div class="pagination-custom">
            <div class="page-nav">
                <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>">«</a>
                <% } %>
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <a href="?page=<%= i %>" class="<%= currentPage === i ? 'active' : '' %>"><%= i %></a>
                <% } %>
                <% if (currentPage < totalPages) { %>
                    <a href="?page=<%= currentPage + 1 %>">»</a>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>

        function openEditModal(name, code, description, startDate, expiryDate, minPrice, offerPrice, status, usageType) {
            document.getElementById("originalCouponName").value = name;
            document.getElementById("editName").value = name;
            document.getElementById('editCode').value = code;
            document.getElementById('editDescription').value = description;
            document.getElementById("editStartDate").value = startDate;
            document.getElementById("editExpiryDate").value = expiryDate;
            document.getElementById("editMinPrice").value = minPrice;
            document.getElementById("editOfferPrice").value = offerPrice;
            document.getElementById("editStatus").value = status;
            document.getElementById("editUsageType").value = usageType;
        }

        document.addEventListener("DOMContentLoaded", () => {

            const today = new Date().setHours(0, 0, 0, 0);

            // ======================== Edit Coupon ========================
            document.getElementById("editCouponForm")?.addEventListener("submit", async (event) => {
                event.preventDefault();

                // Get values from form
                const orgName = document.getElementById("originalCouponName").value.trim();
                const editName = document.getElementById("editName").value.trim();
                const editCode = document.getElementById('editCode').value.trim();
                const editDescription = document.getElementById('editDescription').value.trim();
                const editStartDate = document.getElementById("editStartDate").value;
                const editExpiryDate = document.getElementById("editExpiryDate").value;
                const editMinPrice = document.getElementById("editMinPrice").value;
                const editOfferPrice = document.getElementById("editOfferPrice").value;
                const editStatus = document.getElementById("editStatus").value
                const editUsageType = document.getElementById("editUsageType").value;

                let errors = {
                    editName: document.getElementById("editNameError"),
                    editCode : document.getElementById('editCodeError'),
                    editDescription : document.getElementById('editDescriptionError'),
                    editStartDate: document.getElementById("editStartDateError"),
                    editExpiryDate: document.getElementById("editExpiryDateError"),
                    editMinPrice: document.getElementById("editMinPriceError"),
                    editOfferPrice: document.getElementById("editOfferPriceError"),
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!editName) {
                    errors.editName.innerText = "Name is required.";
                    hasError = true;
                }
                if (!editCode) {
                    errors.editCode.innerText = "Coupon Code is required.";
                    hasError = true;
                }
                if (!editDescription) {
                    errors.editDescription.innerText = "Description is required.";
                    hasError = true;
                }
                if (!editStartDate) {
                    errors.editStartDate.innerText = "Start date is required.";
                    hasError = true;
                }
                if (!editExpiryDate) {
                    errors.editExpiryDate.innerText = "Expiry date is required.";
                    hasError = true;
                }
                if (!editMinPrice) {
                    errors.editMinPrice.innerText = "Minimum price is required.";
                    hasError = true;
                }
                if (!editOfferPrice) {
                    errors.editOfferPrice.innerText = "Offer price is required.";
                    hasError = true;
                }

                if (new Date(editStartDate).setHours(0, 0, 0, 0) < today) {
                    errors.editStartDate.innerText = "Start date cannot be in the past.";
                    hasError = true;
                }

                if (new Date(editExpiryDate).setHours(0, 0, 0, 0) < today) {
                    errors.editExpiryDate.innerText = "Expiry date cannot be in the past.";
                    hasError = true;
                }

                if (editStartDate && editExpiryDate && new Date(editStartDate) > new Date(editExpiryDate)) {
                    errors.editExpiryDate.innerText = "Expiry date must be after the start date.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = {orgName, editName, editCode, editDescription, editStartDate, editExpiryDate, editMinPrice, editOfferPrice, editStatus, editUsageType};

                try {
                    const response = await fetch("/admin/coupons", {
                        method: "PUT",
                        headers : {'content-type' : 'application/json'},
                        body: JSON.stringify(formData),
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            text: "Coupon updated successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        const result = await response.json();
                        Swal.fire({
                            icon: "error",
                            text: result.error || "Coupon update failed!",
                            showConfirmButton: false,
                            timer: 2000,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        text: "An unexpected error occurred.",
                        showConfirmButton: false,
                        timer: 2000,
                    });
                }
            });

            // ======================== Add Coupon ========================
            document.getElementById("addCouponForm")?.addEventListener("submit", async (event) => {
                event.preventDefault();

                const addName = document.getElementById("addName").value.trim();
                const addCode = document.getElementById('addCode').value.trim();
                const addDescription = document.getElementById('addDescription').value.trim();
                const addStartDate = document.getElementById("addStartDate").value;
                const addExpiryDate = document.getElementById("addExpiryDate").value;
                const addMinPrice = document.getElementById("addMinPrice").value;
                const addOfferPrice = document.getElementById("addOfferPrice").value;
                const addUsageType = document.getElementById("addUsageType").value;

                let errors = {
                    addName: document.getElementById("addNameError"),
                    addCode : document.getElementById('addCodeError'),
                    addDescription : document.getElementById('addDescriptionError'),
                    addStartDate: document.getElementById("addStartDateError"),
                    addExpiryDate: document.getElementById("addExpiryDateError"),
                    addMinPrice: document.getElementById("addMinPriceError"),
                    addOfferPrice: document.getElementById("addOfferPriceError"),
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!addName) {
                    errors.addName.innerText = "Name is required.";
                    hasError = true;
                }

                if (!addCode) {
                    errors.addCode.innerText = "Coupon Code is required.";
                    hasError = true;
                }
                if (!addDescription) {
                    errors.addDescription.innerText = "Description is required.";
                    hasError = true;
                }

                if (!addStartDate) {
                    errors.addStartDate.innerText = "Start date is required.";
                    hasError = true;
                }
                if (!addExpiryDate) {
                    errors.addExpiryDate.innerText = "Expiry date is required.";
                    hasError = true;
                }
                if (!addMinPrice) {
                    errors.addMinPrice.innerText = "Minimum price is required.";
                    hasError = true;
                }
                if (!addOfferPrice) {
                    errors.addOfferPrice.innerText = "Offer price is required.";
                    hasError = true;
                }

                if (new Date(addStartDate).setHours(0, 0, 0, 0) < today) {
                    errors.addStartDate.innerText = "Start date cannot be in the past.";
                    hasError = true;
                }

                if (new Date(addExpiryDate).setHours(0, 0, 0, 0) < today) {
                    errors.addExpiryDate.innerText = "Expiry date cannot be in the past.";
                    hasError = true;
                }

                if (addStartDate && addExpiryDate && new Date(addStartDate) > new Date(addExpiryDate)) {
                    errors.addExpiryDate.innerText = "Expiry date must be after the start date.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = {
                    addName,
                    addCode,
                    addDescription,
                    addStartDate,
                    addExpiryDate,
                    addMinPrice,
                    addOfferPrice,
                    addUsageType
                };

                try {
                    const response = await fetch("/admin/coupons", {
                        method: "POST",
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            text: "Coupon added successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            text: result.error || "Coupon creation failed!",
                            showConfirmButton: false,
                            timer: 2000,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        text: "An unexpected error occurred.",
                        showConfirmButton: false,
                        timer: 2000,
                    });
                }
            });

            document.querySelectorAll('.deleteButton').forEach(button => {
                button.addEventListener('click', async (e) => {
                    const couponName = e.currentTarget.getAttribute('data-coupon-name');

                    const result = await Swal.fire({
                        text: `You are about to delete the coupon "${couponName}". This action cannot be undone!`,
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#d33",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "Cancel"
                    });

                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/admin/coupons', {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ couponName })
                            });

                            const data = await response.json();

                            if (response.ok) {
                                Swal.fire({
                                    icon: 'success',
                                    text: data.message || 'Coupon deleted successfully.',
                                    showConfirmButton: false,
                                    timer: 2000,
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    text: data.error || 'Failed to delete the coupon.',
                                });
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                text: 'Something went wrong. Please try again.',
                            });
                        }
                    }
                });
            });


            document.getElementById('searchForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                const searchQuery = document.getElementById('searchInput').value.trim();
                try {
                    if (searchQuery) {
                        window.location.href = `/admin/coupons?q=${encodeURIComponent(searchQuery)}`;
                    } else if (searchQuery == "") {
                        window.location.href = '/admin/coupons'; 
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            });

            document.querySelector('.filter-select').addEventListener('change', function () {
                const filterValue = this.value;
                let query = '';
                if (filterValue === 'true') {
                    query = '?status=true';
                } else if (filterValue === 'false') {
                    query = '?status=false';
                }
                window.location.href = `/admin/coupons${query}`;
            });
        });
    </script>
    </body>
