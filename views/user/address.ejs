<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>User Profile - ElectroMania</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Bootstrap JS Bundle (includes Popper) -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

  <!-- SweetAlert2 -->
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    :root {
      --primary-color: #28517D;
      --secondary-color: #4D44AD;
      --light-gray: #f5f5f5;
      --text-dark: #333333;
    }

    body {
      background-color: var(--primary-color);
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
    }

    /* Profile Container */
    .profile-container {
      display: flex;
      align-items: flex-start;
      background: white;
      border-radius: 15px;
      margin: 0 auto;
      max-width: 1400px;
      width: 100%;
      min-height: 80vh;
      overflow: hidden;
      box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
    }

    /* Sidebar */
    .sidebar {
      width: 380px;
      background-color: white;
      padding: 30px 0;
      border-right: 1px solid #eee;
      height: 100%;
    }

    /* User Profile Header */
    .user-profile {
      display: flex;
      align-items: center;
      padding: 0 20px 20px;
      margin-bottom: 20px;
      border-bottom: 1px solid #eee;
    }

    .user-avatar {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background-color: #ddd;
      overflow: hidden;
      margin-right: 15px;
    }

    .user-avatar img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }

    .username {
      font-size: 16px;
      font-weight: 500;
      color: var(--text-dark);
    }

    .username span {
      font-weight: bold;
    }

    /* Navigation Menu */
    .nav-menu {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .nav-item {
      padding: 12px 20px;
      display: flex;
      align-items: center;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    .nav-item i {
      font-size: 18px;
      margin-right: 15px;
      color: #666;
      width: 24px;
      text-align: center;
    }

    .nav-item.active {
      background-color: var(--light-gray);
      border-left: 3px solid var(--secondary-color);
    }

    .nav-item:hover {
      background-color: #f0f0f0;
    }

    .nav-item.active i,
    .nav-item.active span {
      color: var(--secondary-color);
    }

    /* Content Sections */
    .content-section {
      display: none;
      padding: 30px 40px;
      background-color: white;
    }

    .content-section.active {
      display: block;
    }

    .section-title {
      font-size: 24px;
      font-weight: 600;
      color: var(--text-dark);
      margin-bottom: 30px;
      padding-bottom: 10px;
      border-bottom: 1px solid #eee;
    }

    .manage-address-container {
      padding: 20px;
      font-family: sans-serif;
      width: 90%;
    }

    .header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 30px;
    }

    .header h2 {
      font-size: 22px;
      font-weight: 600;
    }

    .add-new-btn {
      background-color: #5850EC;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 14px;
      transition: background-color 0.2s ease;
    }

    .add-new-btn:hover {
      background-color: #4338CA;
    }

    .address-list {
      display: flex;
      flex-direction: column;
      gap: 15px;
    }

    .address-card {
      background-color: #d1d1d1b2;
      border-radius: 8px;
      padding: 20px;
      display: flex;
      justify-content: space-between;
      align-items: flex-start;
      /* Align items to the top */
      position: relative;
      /* For positioning the tag and options */
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    }

    .card-content {
      flex-grow: 1;
      padding-right: 50px;
      /* Space for buttons */
    }

    .card-content .name {
      font-weight: 600;
      margin-bottom: 4px;
      font-size: 15px;
    }

    .card-content .mobile {
      font-size: 14px;
      color: #555;
      margin-bottom: 8px;
    }

    .card-content .full-address {
      font-size: 14px;
      color: #333;
      line-height: 1.5;
    }

    .card-actions {
      position: absolute;
      top: 15px;
      right: 15px;
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    .options-btn {
      background: none;
      border: none;
      cursor: pointer;
      color: #888;
      font-size: 16px;
      padding: 5px;
      /* Easier to click */
      margin-bottom: 45px;
      /* Pushes it up to align with the top */
    }

    .options-btn:hover {
      color: #333;
    }

    .address-type-tag {
      background-color: #eee;
      color: #555;
      font-size: 12px;
      padding: 4px 10px;
      border-radius: 4px;
      position: absolute;
      /* Position relative to card */
      bottom: 15px;
      /* Align to bottom */
      right: 15px;
      /* Align to right */
    }

    .address-form-container {
      padding: 20px;
    }

    .address-form {
      display: flex;
      flex-direction: column;
      gap: 20px;
    }

    .form-row {
      display: flex;
      gap: 20px;
    }

    .form-group {
      flex: 1;
    }

    .full-width {
      width: 100%;
    }

    label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
    }

    .form-input {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      background-color: #f5f5f5;
      font-size: 14px;
    }

    textarea.form-input {
      min-height: 100px;
      resize: vertical;
    }

    .address-type {
      display: flex;
      gap: 20px;
      margin-top: 10px;
    }

    .radio-container {
      display: flex;
      align-items: center;
      gap: 8px;
      cursor: pointer;
    }

    .form-buttons {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
    }

    .save-btn {
      background-color: #5850EC;
      color: white;
      padding: 10px 24px;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .cancel-btn {
      background-color: white;
      color: #333;
      padding: 10px 24px;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
    }

    .save-btn:hover {
      background-color: #4338CA;
    }

    .cancel-btn:hover {
      background-color: #f5f5f5;
    }

    .input-error {
      border: 1px solid red !important;
      background-color: #fff0f0;
    }

    /* Fix for content layout */
    .main-content {
      flex: 1;
      padding: 0;
      width: calc(100% - 300px);
      overflow: hidden;
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .profile-container {
        flex-direction: column;
      }
      
      .sidebar {
        width: 100%;
        border-right: none;
        border-bottom: 1px solid #eee;
      }
      
      .main-content {
        width: 100%;
      }
        
      .form-row {
        flex-direction: column;
        gap: 15px;
      }

      .address-form-container {
        padding: 15px;
      }
    }

    /* Responsive */
    @media (max-width: 600px) {
      .header {
        flex-direction: column;
        align-items: flex-start;
        gap: 15px;
      }

      .address-card {
        padding: 15px;
      }

      .card-content {
        padding-right: 40px;
        /* Adjust space */
      }
    }
  </style>

  <!-- Navbar -->
  <%- include ('../partials/header' )%>

    <div class="profile-container">
      <!-- Left Sidebar -->
      <div class="sidebar">
        <%- include ('../partials/profileSidebar') %>
      </div>

      <!-- Main Content -->
      <div class="main-content">
        <div class="manage-address-container">
          <div class="header">
            <h2>Manage Addresses</h2>
            <!-- Button to trigger modal -->
            <a href="/user/addAddress" class="btn btn-primary"
            style="background-color: #3735be; border-color: #483250; border-radius: 8px;">
            Add new Address
        </a>
          </div>

          <div class="address-list">
            <% if (address && address.length> 0) { %>
              <% address.forEach(address=> { %>
                <% address.details.forEach((details,index) =>{ %>
                <div class="address-card">
                  <div class="card-content">
                    <div class="name">
                      <%= details.name %>
                    </div>
                    <div class="mobile">
                      <%= details.phone %>
                    </div>
                    <div class="full-address">
                      <%= details.addressLine1 %>
                      <%= details.addressLine2 %>
                    </div>
                    <%= details.city + ', ' + details.landmark + ' , ' + details.state + ' - ' + details.zipCode  %>
                  </div>
                  <span class="address-type-tag">
                    <%= details.addressType%>
                  </span>
                  <div class="card-actions">
                    <div class="dropdown">
                      <button class="btn btn-light border-0" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                          <i class="fa-solid fa-ellipsis-vertical"></i>
                      </button>
                      <ul class="dropdown-menu dropdown-menu-end">
                          <li>
                              <a class="dropdown-item" href="/user/editaddress?id=<%= address.userId %>&index=<%= index %>">
                                  Edit
                              </a>
                          </li>
                          <li>
                              <form id="deleteAddressForm" class="deleteForm">
                                  <input type="hidden" name="userId" class="userId" id="userId" value="<%= address.userId %>">
                                  <input type="hidden" name="index" class="index" id="index" value="<%= index %>">
                                  <button type="submit" class="dropdown-item text-danger">Delete</button>
                              </form>                                          
                          </li>
                      </ul>
                    </div>
                  </div>
                </div>
                <% }); %>
              <% }); %>
            <% } else { %>
              <p>No address found. Add a new one!</p>
            <% } %>
          </div>
        </div>
      </div>
    </div>

      <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
        <script>
          document.addEventListener("DOMContentLoaded", () => {
            document.getElementById("addresses").classList.add("active");
          })

          const deleteForm = document.querySelectorAll(".deleteForm")

          const userId = document.getElementById('userId').value 
          const index = document.getElementById('index').value

          deleteForm.forEach((address) =>{
          address.addEventListener('submit', async (event)=>{
            event.preventDefault()

            const result = await Swal.fire({
              title: "Are you sure?",
              text: "You won't be able to revert this!",
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#3085d6",
              cancelButtonColor: "#d33",
              confirmButtonText: "Yes, delete it!"
            })
              if (result.isConfirmed) {

                const response = await fetch(`/user/address?userId=${userId}&index=${index}`,{
                  method : 'DELETE'
                })

                if(!response.ok){
                  Swal.fire({
                    icon : 'error',
                    text : "Failed to delete the address",
                    timer : 1500,
                    showConfirmButton : false
                  })
                } else {
                  Swal.fire({
                  title: "Deleted!",
                  text: "Deleted successfully!.",
                  icon: "success",
                  showConfirmButton : false,
                  timer : 1500
                }).then(()=>{
                  window.location.reload()
                });
                }
                
              }         
          })
          })
        </script>