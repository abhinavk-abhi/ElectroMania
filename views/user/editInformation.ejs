<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile - ElectroMania</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Bootstrap JS Bundle (includes Popper) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        :root {
            --primary-color: #28517D;
            --secondary-color: #4D44AD;
            --light-gray: #f5f5f5;
            --text-dark: #333333;
        }

        body {
            background-color: var(--primary-color);
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        /* Profile Container */
        .profile-container {
            display: flex;
            align-items: flex-start;
            background: white;
            border-radius: 15px;
            margin: 20px auto;
            max-width: 1200px;
            width: 90%;
            min-height: 80vh;
            overflow: hidden;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
        }

        /* Sidebar */
        .sidebar {
            width: 250px;
            background-color: white;
            padding: 30px 0;
            border-right: 1px solid #eee;
            height: 100%;
        }

        /* User Profile Header */
        .user-profile {
            display: flex;
            align-items: center;
            padding: 0 20px 20px;
            margin-bottom: 20px;
            border-bottom: 1px solid #eee;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background-color: #ddd;
            overflow: hidden;
            margin-right: 15px;
        }

        .user-avatar img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .username {
            font-size: 16px;
            font-weight: 500;
            color: var(--text-dark);
        }

        .username span {
            font-weight: bold;
        }

        /* Navigation Menu */
        .nav-menu {
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .nav-item {
            padding: 12px 20px;
            display: flex;
            align-items: center;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .nav-item i {
            font-size: 18px;
            margin-right: 15px;
            color: #666;
            width: 24px;
            text-align: center;
        }

        .nav-item.active {
            background-color: var(--light-gray);
            border-left: 3px solid var(--secondary-color);
        }

        .nav-item:hover {
            background-color: #f0f0f0;
        }

        .nav-item.active i,
        .nav-item.active span {
            color: var(--secondary-color);
        }

        /* Content Sections */
        .content-section {
            display: none;
            padding: 30px 40px;
            background-color: white;
        }

        .content-section.active {
            display: block;
        }

        .section-title {
            font-size: 24px;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 30px;
            padding-bottom: 10px;
            border-bottom: 1px solid #eee;
        }

        /* Form Styles */
        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            font-weight: 500;
            color: #555;
            display: block;
            margin-bottom: 8px;
        }

        .form-control {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 14px;
        }

        .radio-group {
            display: flex;
            gap: 20px;
            margin-top: 5px;
        }

        .radio-option {
            display: flex;
            align-items: center;
            background-color: #f5f5f5;
            padding: 8px 20px;
            border-radius: 5px;
            cursor: pointer;
        }

        .radio-option input {
            margin-right: 8px;
        }

        /* Button Styles */
        .btn-group {
            display: flex;
            gap: 10px;
            margin-top: 30px;
        }

        .btn-save {
            background-color: var(--secondary-color);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
            margin-bottom: 20px;
          
        }

        .btn-cancel {
            background-color: #f5f5f5;
            color: #666;
            border: 1px solid #ddd;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-weight: 500;
        }

        /* Order Styles */
        .order-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .order-id {
            font-weight: bold;
        }

        .order-status {
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
        }

        .status-delivered {
            background-color: #d4edda;
            color: #155724;
        }

        .status-processing {
            background-color: #fff3cd;
            color: #856404;
        }

        .order-product {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
        }

        .order-product img {
            width: 80px;
            height: 80px;
            object-fit: contain;
            margin-right: 15px;
        }

        .product-info h4 {
            font-size: 16px;
            margin-bottom: 5px;
        }

        .product-price {
            font-weight: bold;
            color: var(--secondary-color);
        }

        /* Address Styles */
        .address-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            position: relative;
        }

        .address-actions {
            position: absolute;
            top: 20px;
            right: 20px;
        }

        .address-type {
            display: inline-block;
            padding: 3px 10px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: 500;
            background-color: #e9ecef;
            margin-bottom: 10px;
        }

        .address-name {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .address-details {
            color: #666;
            line-height: 1.5;
        }

        .address-phone {
            margin-top: 10px;
            color: #666;
        }

        /* Review Styles */
        .review-card {
            border: 1px solid #eee;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
        }

        .review-product {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 15px;
            border-bottom: 1px solid #eee;
        }

        .review-product img {
            width: 60px;
            height: 60px;
            object-fit: contain;
            margin-right: 15px;
        }

        .stars {
            color: gold;
            margin: 10px 0;
        }

        .review-text {
            color: #666;
            line-height: 1.5;
        }

        .review-date {
            color: #999;
            font-size: 12px;
            margin-top: 10px;
        }

        /* Wallet Styles */
        .wallet-balance {
            background-color: var(--secondary-color);
            color: white;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 30px;
        }

        .balance-label {
            font-size: 14px;
            margin-bottom: 5px;
        }

        .balance-amount {
            font-size: 28px;
            font-weight: bold;
        }

        .transaction {
            display: flex;
            justify-content: space-between;
            padding: 15px 0;
            border-bottom: 1px solid #eee;
        }

        .transaction-details h4 {
            font-size: 16px;
            margin-bottom: 5px;
        }

        .transaction-date {
            color: #999;
            font-size: 12px;
        }

        .transaction-amount {
            font-weight: bold;
        }

        .amount-credit {
            color: #28a745;
        }

        .amount-debit {
            color: #dc3545;
        }

        .file-label {
    background-color: #4f46e5;
    color: white;
    padding: 8px 16px;
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.3s;
  }

  .file-label:hover {
    background-color: #4338ca;
  }

  .hidden-input {
    display: none;
  }


        /* Responsive */
        @media (max-width: 768px) {
            .profile-container {
                flex-direction: column;
                width: 95%;
            }

            .sidebar {
                border-right: none;
                border-bottom: 1px solid #eee;
                padding-bottom: 10px;
            }
        }

        .profile-content {
            flex-grow: 1;
            padding: 20px;
        }

        form {
            max-width: 600px;
            margin: 0 auto;
        }
    </style>
</head>

<body>
    <!-- Navbar -->
    <%- include ('../partials/header' )%>

        <div class="profile-container row">
            <!-- Left Sidebar -->
            <%- include ('../partials/profileSidebar') %>

                <!-- Main Content -->
                <div class=" col-12 col-md-6 col-lg-8 main-content">

                    <!-- Main Content -->
                    <div class="col-12 col-md-6 col-lg-12  main-content">
                        <h2 class="section-title">Personal Information</h2>


                        <!-- Form -->
                        <form id="editProfile" enctype="multipart/form-data">
                            <div class="row">

                                 <!-- Profile Picture -->
                            <div class="col-12 text-center">
                                <div class="profile-pic-container mx-auto">
                                    <img src="<%= user && user.profilePic ? user.profilePic : '/images/user.png' %>" style="width: 100px; height: 100px;" alt="Profile Preview"
                                                class="profile-pic-preview" id="profilePicPreview">

                                    <br><br>
                                    <label for="profilePic" class="file-label">Upload Profile Picture</label>
                                    <input type="file" id="profilePic" name="profilePic" class="profile-pic-input hidden-input
                                        accept="image/*" onchange="previewImage(event)">
                                </div>
                            </div>

                                <div class="col-md-6">
                                    
                        
                                    <div class="form-group">
                                        <label class="form-label"> Name</label>
                                        <input type="text" class="form-control" id="name" name="name" 
                                        value="<%= user && user.name ? user.name : '' %>">
                                    </div>
                                    <div class="errorContainer">
                                        <p class="errorText text-danger"></p>
                                    </div>

                                </div>

                            </div>

                            <div class="form-group">
                                <label class="form-label">Gender</label>
                                <div class="radio-group">
                                    <div class="radio-option">
                                        <input type="radio" id="male" name="gender" value="Male" <%=user.gender=="Male"
                                            ? 'checked' : '' %>>
                                        <label for="male">Male</label>
                                    </div>
                                    <div class="radio-option">
                                        <input type="radio" id="female" name="gender" value="Female"
                                            <%=user.gender=="Female" ? 'checked' : '' %>>
                                        <label for="female">Female</label>
                                    </div>
                                </div>
                                <div class="errorContainer">
                                    <p class="errorText text-danger"></p>
                                </div>

                            </div>

                            <div class="form-group">
                                <label class="form-label">Email address</label>
                                <input type="email" id="email" class="form-control" name="email"
                                    value="<%= locals.user ? user.email : '' %>">
                                <input type="hidden" id="userId" value="<%= locals.user._id %>">
                                <input id="userEmail" type="hidden" value="<%=user.email%>">
                            </div>
                            <div class="errorContainer">
                                <p class="errorText text-danger"></p>
                            </div>



                            <div class="form-group">
                                <label class="form-label">Mobile Number</label>
                                <input type="tel" class="form-control" id="phone" name="mobile"
                                    value="<%= locals.user ? user.phone : '' %>">
                            </div>
                            <div class="errorContainer">
                                <p class="errorText text-danger"></p>
                            </div>


                            <div class="btn-group">
                                <button type="submit" id="editProfileButton" class="btn-save">Edit</button>
                            </div>
                        </form>

                        <!-- OTP Modal -->
                        <div class="modal fade" id="otpModal" tabindex="-1" aria-labelledby="otpModalLabel"
                            aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content p-3">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="otpModalLabel">Enter OTP</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal"
                                            aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <form id="otpForm">
                                            <div class="mb-3">
                                                <label for="otpInput" class="form-label">OTP</label>
                                                <input type="text" class="form-control" id="otpInput" maxlength="4"
                                                    pattern="\d{4}" placeholder="Enter 4-digit OTP" required
                                                    oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 4);">
                                                <div class="invalid-feedback">
                                                    Please enter a valid 4-digit OTP.
                                                </div>
                                            </div>
                                            <div class="text-end">
                                                <button type="submit" class="btn btn-primary">Send</button>
                                            </div>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
        </div>

        <!-- Footer -->
        <footer class="footer">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-md-6">
                        <div class="payment-methods">
                            <img src="/images/visa.png" alt="Visa">
                            <img src="/images/mastercard.png" alt="Mastercard">
                            <img src="/images/paypal.png" alt="PayPal">
                        </div>
                    </div>
                    <div class="col-md-6 text-end">
                        <div class="social-links">
                            <a href="#"><i class="fab fa-facebook"></i></a>
                            <a href="#"><i class="fab fa-twitter"></i></a>
                            <a href="#"><i class="fab fa-instagram"></i></a>
                            <a href="#"><i class="fab fa-youtube"></i></a>
                        </div>
                    </div>
                    <div class="col-12 text-center mt-3">
                        <small>© 2024 ElectroMania - All Rights Reserved</small>
                    </div>
                </div>
            </div>
        </footer>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <script>

    function previewImage(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('profilePicPreview').src = e.target.result;
            }
            reader.readAsDataURL(file);
        }
    }

            document.addEventListener("DOMContentLoaded", () => {
                document.getElementById("profile").classList.add("active");



                document.getElementById("editProfile").addEventListener("submit", async function () {
                    // Clear all previous error messages
                    document.querySelectorAll(".errorText").forEach(el => el.innerText = "");

                    const formData = new FormData(document.getElementById("editProfile"));


                    const name = document.getElementById("name").value.trim();
                    const email = document.getElementById("email").value.trim();
                    const phone = document.getElementById("phone").value.trim();
                    const genderMale = document.getElementById("male").checked;
                    const genderFemale = document.getElementById("female").checked;
                    const userEmail = document.getElementById("userEmail").value
                    const id = document.getElementById("userId").value
                    let gender;

                    let isValid = true;
                    const errorMessages = document.querySelectorAll(".errorText");

                    if (!name) {
                        errorMessages[0].innerText = "Name is required.";
                        isValid = false;
                    }

                    if (!genderMale && !genderFemale) {
                        errorMessages[1].innerText = "Please select your gender.";
                        isValid = false;
                    }

                    const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    if (!email) {
                        errorMessages[2].innerText = "Email is required.";
                        isValid = false;
                    } else if (!emailPattern.test(email)) {
                        errorMessages[2].innerText = "Enter a valid email.";
                        isValid = false;
                    }

                    const phonePattern = /^[0-9]{10}$/;
                    if (!phone) {
                        errorMessages[3].innerText = "Phone number is required.";
                        isValid = false;
                    } else if (!phonePattern.test(phone)) {
                        errorMessages[3].innerText = "Enter a valid 10-digit phone number.";
                        isValid = false;
                    }

                   
                    

                    document.getElementById("otpForm").addEventListener("submit", function (e) {
                        e.preventDefault();
                        const otp = document.getElementById("otpInput").value;


                    });

                    if (email !== userEmail) {
                        const response = await fetch('/user/profile/emailOtp', {
                            method: "post",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify( {userEmail} )
                        })

                        const data = await response.json()

                        if (!response.ok) {
                            Swal.fire({
                                icon: "warning",
                                text: data.error,
                                timer: 2000,
                                showConfirmButton: false,
                            })

                        } else {
                            const otpModal = new bootstrap.Modal(document.getElementById("otpModal"));
                            otpModal.show();

                            document.getElementById("otpForm").addEventListener("submit", async function (e) {
                                e.preventDefault();
                                const otpInput = document.getElementById("otpInput");
                                const otp = otpInput.value;

                                if (!/^\d{4}$/.test(otp)) {
                                    otpInput.classList.add("is-invalid");
                                    return;
                                }

                                // Remove previous invalid state
                                otpInput.classList.remove("is-invalid");

                                const details = {
                                    formOtp : otp,
                                    formEmail : email,
                                    requestForm : "emailUpdate"
                                }

                                // Send OTP for verification
                                const otpVerify = await fetch('/user/userProfileOtp', {
                                    method: 'POST',
                                    headers: { "Content-Type": "application/json" },
                                    body: JSON.stringify({details})  // Include email if needed
                                });

                                const result = await otpVerify.json();

                                if (!otpVerify.ok) {
                                    Swal.fire({
                                        icon: "error",
                                        text: result.error || "Invalid OTP",
                                        timer: 2000,
                                        showConfirmButton: false
                                    });
                                }else{

                                const saveChanges = await fetch('/user/userProfile', {
                                method: "put",
                                body: formData
                                })

                                const result = await saveChanges.json()

                                if (!saveChanges.ok) {
                                Swal.fire({
                                    icon: "warning",
                                    text: result.error,
                                    timer: 2000,
                                    showConfirmButton: false
                                })
                                } else {
                                Swal.fire({
                                    icon: "success",
                                    text: result.message,
                                    timer: 1500,
                                    showConfirmButton: false
                                }).then((res)=>{
                                    window.location.href = "/user/profile"
                                })
                                }

                                }
                            })
                        

                        }

                        } else {
                           
                            const saveChanges = await fetch(`/user/userProfile?id=${id}`, {
                                method: "put",
                                body: formData
                            })

                            const result = await saveChanges.json()

                            if (!saveChanges.ok) {
                                Swal.fire({
                                    icon: "warning",
                                    text: result.error,
                                    timer: 2500,
                                    showConfirmButton: false
                                }).then(()=>{
                                    window.location.href = "/user/profile"
                                })
                            } else {
                                Swal.fire({
                                    icon: "success",
                                    text: result.message,
                                    timer: 4000,
                                    showConfirmButton: false
                                }).then(()=>{
                                    window.location.href = "/user/profile"
                                })
                            }

                        }

                    });

            });
        </script>
</body>

</html>